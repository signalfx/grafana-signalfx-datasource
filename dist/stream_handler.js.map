{"version":3,"sources":["../src/stream_handler.js"],"names":["defer","res","rej","promise","Promise","resolve","reject","_","TagProcessor","moment","MAX_DATAPOINTS_TO_KEEP_BEFORE_TIMERANGE","INACTIVE_JOB_MINUTES","STREAMING_THRESHOLD_MINUTES","StreamHandler","signalflow","templateSrv","tagProcessor","program","aliases","maxDelay","options","isJobReusable","unboundedBatchPhase","initializeTimeRange","flushData","stop","execute","setupCleanupTask","desiredMaxDelay","intervalMs","startTime","range","from","valueOf","unbounded","running","stopTime","to","jobStartTimeout","clearTimeout","setTimeout","console","debug","handle","close","log","initialize","params","start","resolution","stream","handleData","bind","metrics","maxDataPoints","resolutionMs","Date","now","cutoffTime","Math","min","err","data","message","type","messageCode","contents","maxDelayMs","event","appendData","batchPhaseFlushTimeout","i","length","point","datapoints","tsId","push","value","logicalTimestampMs","nextEstimatedTimestamp","ceil","floor","seriesList","minTime","maxTime","timeRangeStart","shift","tsName","timeSeriesNameAndId","get_metadata","properties","target","name","id","slice","sort","a","b","localeCompare"],"mappings":"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","file":"stream_handler.js","sourcesContent":["// Copyright (C) 2019-2020 Splunk, Inc. All rights reserved.\nimport _ from \"lodash\";\nimport {TagProcessor} from './tag_processor';\nimport moment from 'moment';\n\nfunction defer() {\n  var res, rej;\n\n  var promise = new Promise((resolve, reject) => {\n    res = resolve;\n    rej = reject;\n  });\n\n  promise.resolve = res;\n  promise.reject = rej;\n\n  return promise;\n}\n\nconst MAX_DATAPOINTS_TO_KEEP_BEFORE_TIMERANGE = 1;\nconst INACTIVE_JOB_MINUTES = 6;\nconst STREAMING_THRESHOLD_MINUTES = 2;\n\nexport class StreamHandler {\n\n  constructor(signalflow, templateSrv) {\n    this.signalflow = signalflow;\n    this.tagProcessor = new TagProcessor(templateSrv);\n  }\n\n  start(program, aliases, maxDelay, options) {\n    this.aliases = aliases;\n    if (this.isJobReusable(program, maxDelay, options)) {\n      if (!this.unboundedBatchPhase) {\n        this.promise = defer();\n        this.initializeTimeRange(options);\n        this.flushData();\n      }\n    } else {\n      this.promise = defer();\n      this.stop();\n      this.execute(program, maxDelay, options);\n    }\n    this.setupCleanupTask();\n    return this.promise;\n  }\n\n  isJobReusable(program, maxDelay, options) {\n    return this.program == program\n      && this.desiredMaxDelay == maxDelay\n      && this.intervalMs == options.intervalMs\n      && this.startTime <= options.range.from.valueOf()\n      && ((this.unbounded && this.running) || this.stopTime >= options.range.to.valueOf());\n  }\n\n  setupCleanupTask() {\n    if (this.jobStartTimeout) {\n      clearTimeout(this.jobStartTimeout);\n    }\n    this.jobStartTimeout = setTimeout(() => {\n      console.debug('Job inactive for ' + INACTIVE_JOB_MINUTES + ' minutes: ' + this.program);\n      this.stop();\n    }, INACTIVE_JOB_MINUTES * 60 * 1000);\n  }\n\n  stop() {\n    if (this.running) {\n      console.debug('Stopping SignalFlow computation.');\n      this.handle.close();\n      this.running = false;\n    }\n  }\n\n  execute(program, maxDelay, options) {\n    console.log('Starting SignalFlow computation: ' + program);\n    this.initialize(program, maxDelay, options);\n    var params = {\n      program: this.program,\n      start: this.startTime,\n      resolution: this.intervalMs,\n    };\n    if (!this.unbounded) {\n      params['stop'] = this.stopTime;\n      params['immediate'] = true;\n    }\n    if (this.maxDelay) {\n      params['maxDelay'] = this.maxDelay;\n    }\n    this.handle = this.signalflow.execute(params);\n    this.running = true;\n    this.handle.stream(this.handleData.bind(this));\n  }\n\n  initialize(program, maxDelay, options) {\n    this.metrics = {};\n    this.program = program;\n    this.maxDelay = maxDelay;\n    this.desiredMaxDelay = maxDelay;\n    this.initializeTimeRange(options);\n    this.intervalMs = options.intervalMs;\n    this.maxDataPoints = options.maxDataPoints;\n    this.resolutionMs = options.intervalMs;\n    this.unbounded = this.stopTime > Date.now() - STREAMING_THRESHOLD_MINUTES * 60 * 1000;\n    this.unboundedBatchPhase = this.unbounded;\n  }\n\n  initializeTimeRange(options) {\n    this.startTime = options.range.from.valueOf();\n    this.stopTime = options.range.to.valueOf();\n    this.cutoffTime = Math.min(Date.now(), this.stopTime);\n  }\n\n  handleData(err, data) {\n    if (err) {\n      console.debug('Stream error', err);\n      this.stop();\n      this.promise.reject(err.message);\n      return;\n    }\n\n    if (data.type === 'message' && data.message.messageCode === 'JOB_RUNNING_RESOLUTION') {\n      this.resolutionMs = data.message.contents.resolutionMs;\n    }\n\n    if (data.type === 'message' && data.message.messageCode === 'JOB_INITIAL_MAX_DELAY') {\n      this.maxDelay = data.message.contents.maxDelayMs;\n    }\n\n    if (data.type === 'control-message' && (data.event === 'END_OF_CHANNEL' || data.event === 'CHANNEL_ABORT')) {\n      this.flushData();\n      this.stop();\n    }\n\n    if (data.type !== 'data') {\n      console.debug(data);\n      return;\n    }\n\n    if (this.appendData(data) && this.unboundedBatchPhase) {\n      // Do not flush immediately as some more data may be still received\n      if (this.batchPhaseFlushTimeout) {\n        clearTimeout(this.batchPhaseFlushTimeout);\n      }\n      this.batchPhaseFlushTimeout = setTimeout(() => this.flushData(), 500);\n    }\n  }\n\n  appendData(data) {\n    for (var i = 0; i < data.data.length; i++) {\n      var point = data.data[i];\n      var datapoints = this.metrics[point.tsId];\n      if (!datapoints) {\n        datapoints = [];\n        this.metrics[point.tsId] = datapoints;\n      }\n      datapoints.push([point.value, data.logicalTimestampMs]);\n    }\n    // Estimate an align timestamps to boundaries based on resolution\n    var nextEstimatedTimestamp = data.logicalTimestampMs + Math.ceil(this.maxDelay / this.resolutionMs + 1) * this.resolutionMs;\n    return nextEstimatedTimestamp > Math.floor(this.cutoffTime / this.resolutionMs) * this.resolutionMs;\n  }\n\n  flushData() {\n    this.unboundedBatchPhase = false;\n    var seriesList = [];\n    var minTime = 0;\n    var maxTime = 0;\n    var timeRangeStart = this.startTime - MAX_DATAPOINTS_TO_KEEP_BEFORE_TIMERANGE * this.resolutionMs;\n    for (var tsId in this.metrics) {\n      var datapoints = this.metrics[tsId];\n      while (datapoints.length > 0 && timeRangeStart > datapoints[0][1]) {\n        datapoints.shift();\n      }\n      if (datapoints.length > 0) {\n        if (minTime == 0 || minTime > datapoints[0][1]) {\n          minTime = datapoints[0][1];\n        }\n        if (maxTime == 0 || maxTime < datapoints[datapoints.length - 1][1]) {\n          maxTime = datapoints[datapoints.length - 1][1];\n        }\n      }\n      var tsName = this.tagProcessor.timeSeriesNameAndId(tsId, this.handle.get_metadata(tsId).properties, this.aliases);\n      seriesList.push({ target: tsName.name, id: tsName.id, datapoints: datapoints.slice() });\n    }\n    // Ensure consistent TS order\n    seriesList.sort((a, b) => a.id.localeCompare(b.id));\n    var data = {\n      data: seriesList,\n      range: { from: moment(minTime), to: moment(maxTime) },\n    };\n    this.promise.resolve(data);\n    console.debug('Data returned: ' + this.program);\n  }\n\n}\n"]}