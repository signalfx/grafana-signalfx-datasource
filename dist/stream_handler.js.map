{"version":3,"sources":["../src/stream_handler.js"],"names":["defer","res","rej","promise","Promise","resolve","reject","_","moment","MAX_DATAPOINTS_TO_KEEP_BEFORE_TIMERANGE","INACTIVE_JOB_MINUTES","STREAMING_THRESHOLD_MINUTES","StreamHandler","signalflow","templateSrv","program","aliases","options","isJobReusable","unboundedBatchPhase","initializeTimeRange","flushData","stop","execute","setupCleanupTask","intervalMs","startTime","range","from","valueOf","unbounded","handle","stopTime","to","jobStartTimeout","clearTimeout","setTimeout","console","debug","close","log","initialize","params","start","resolution","stream","handleData","bind","metrics","maxDataPoints","resolutionMs","maxDelay","Date","now","cutoffTime","Math","min","err","data","message","type","messageCode","contents","maxDelayMs","event","appendData","batchPhaseFlushTimeout","i","length","point","datapoints","tsId","push","value","logicalTimestampMs","nextEstimatedTimestamp","ceil","floor","seriesList","minTime","maxTime","timeRangeStart","shift","tsName","getTimeSeriesName","target","name","id","slice","sort","a","b","localeCompare","obj","get_metadata","candidates","excludedDimensions","tsVars","result","c","properties","toLowerCase","startsWith","text","key","k","dimension","indexOf","join","repr","alias","find","replace"],"mappings":"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","file":"stream_handler.js","sourcesContent":["// Copyright (C) 2019 SignalFx, Inc. All rights reserved.\nimport _ from \"lodash\";\nimport moment from 'moment';\n\nfunction defer() {\n  var res, rej;\n\n  var promise = new Promise((resolve, reject) => {\n    res = resolve;\n    rej = reject;\n  });\n\n  promise.resolve = res;\n  promise.reject = rej;\n\n  return promise;\n}\n\nconst MAX_DATAPOINTS_TO_KEEP_BEFORE_TIMERANGE = 1;\nconst INACTIVE_JOB_MINUTES = 6;\nconst STREAMING_THRESHOLD_MINUTES = 2;\n\nexport class StreamHandler {\n\n  constructor(signalflow, templateSrv) {\n    this.signalflow = signalflow;\n    this.templateSrv = templateSrv;\n  }\n\n  start(program, aliases, options) {\n    this.aliases = aliases;\n    if (this.isJobReusable(program, options)) {\n      if (!this.unboundedBatchPhase) {\n        this.promise = defer();\n        this.initializeTimeRange(options);\n        this.flushData();\n      }\n    } else {\n      this.promise = defer();\n      this.stop();\n      this.execute(program, options);\n    }\n    this.setupCleanupTask();\n    return this.promise;\n  }\n\n  isJobReusable(program, options) {\n    return this.program == program\n      && this.intervalMs == options.intervalMs\n      && this.startTime <= options.range.from.valueOf()\n      && ((this.unbounded && this.handle) || this.stopTime >= options.range.to.valueOf());\n  }\n\n  setupCleanupTask() {\n    if (this.jobStartTimeout) {\n      clearTimeout(this.jobStartTimeout);\n    }\n    this.jobStartTimeout = setTimeout(() => {\n      console.debug('Job inactive for ' + INACTIVE_JOB_MINUTES + ' minutes: ' + this.program);\n      this.stop();\n    }, INACTIVE_JOB_MINUTES * 60 * 1000);\n  }\n\n  stop() {\n    if (this.handle) {\n      console.debug('Stopping SignalFlow computation.');\n      this.handle.close();\n      this.handle = null;\n    }\n  }\n\n  execute(program, options) {\n    console.log('Starting SignalFlow computation: ' + program);\n    this.initialize(program, options);\n    var params = {\n      program: this.program,\n      start: this.startTime,\n      resolution: this.intervalMs,\n    };\n    if (!this.unbounded) {\n      params['stop'] = this.stopTime;\n      params['immediate'] = true;\n    }\n    this.handle = this.signalflow.execute(params);\n    this.handle.stream(this.handleData.bind(this));\n  }\n\n  initialize(program, options) {\n    this.metrics = {};\n    this.program = program;\n    this.initializeTimeRange(options);\n    this.intervalMs = options.intervalMs;\n    this.maxDataPoints = options.maxDataPoints;\n    this.resolutionMs = options.intervalMs;\n    this.maxDelay = 0;\n    this.unbounded = this.stopTime > Date.now() - STREAMING_THRESHOLD_MINUTES * 60 * 1000;\n    this.unboundedBatchPhase = this.unbounded;\n  }\n\n  initializeTimeRange(options) {\n    this.startTime = options.range.from.valueOf();\n    this.stopTime = options.range.to.valueOf();\n    this.cutoffTime = Math.min(Date.now(), this.stopTime);\n  }\n\n  handleData(err, data) {\n    if (err) {\n      console.debug('Stream error', err);\n      this.stop();\n      this.promise.reject(err.message);\n      return;\n    }\n\n    if (data.type === 'message' && data.message.messageCode === 'JOB_RUNNING_RESOLUTION') {\n      this.resolutionMs = data.message.contents.resolutionMs;\n    }\n\n    if (data.type === 'message' && data.message.messageCode === 'JOB_INITIAL_MAX_DELAY') {\n      this.maxDelay = data.message.contents.maxDelayMs;\n    }\n\n    if (data.type === 'control-message' && (data.event === 'END_OF_CHANNEL' || data.event === 'CHANNEL_ABORT')) {\n      this.flushData();\n      this.stop();\n    }\n\n    if (data.type !== 'data') {\n      console.debug(data);\n      return;\n    }\n\n    if (this.appendData(data) && this.unboundedBatchPhase) {\n      // Do not flush immediately as some more data may be still received\n      if (this.batchPhaseFlushTimeout) {\n        clearTimeout(this.batchPhaseFlushTimeout);\n      }\n      this.batchPhaseFlushTimeout = setTimeout(() => this.flushData(), 500);\n    }\n  }\n\n  appendData(data) {\n    for (var i = 0; i < data.data.length; i++) {\n      var point = data.data[i];\n      var datapoints = this.metrics[point.tsId];\n      if (!datapoints) {\n        datapoints = [];\n        this.metrics[point.tsId] = datapoints;\n      }\n      datapoints.push([point.value, data.logicalTimestampMs]);\n    }\n    // Estimate an align timestamps to boundaries based on resolution\n    var nextEstimatedTimestamp = data.logicalTimestampMs + Math.ceil(this.maxDelay / this.resolutionMs + 1) * this.resolutionMs;\n    return nextEstimatedTimestamp > Math.floor(this.cutoffTime / this.resolutionMs) * this.resolutionMs;\n  }\n\n  flushData() {\n    this.unboundedBatchPhase = false;\n    var seriesList = [];\n    var minTime = 0;\n    var maxTime = 0;\n    var timeRangeStart = this.startTime - MAX_DATAPOINTS_TO_KEEP_BEFORE_TIMERANGE * this.resolutionMs;\n    for (var tsId in this.metrics) {\n      var datapoints = this.metrics[tsId];\n      while (datapoints.length > 0 && timeRangeStart > datapoints[0][1]) {\n        datapoints.shift();\n      }\n      if (datapoints.length > 0) {\n        if (minTime == 0 || minTime > datapoints[0][1]) {\n          minTime = datapoints[0][1];\n        }\n        if (maxTime == 0 || maxTime < datapoints[datapoints.length - 1][1]) {\n          maxTime = datapoints[datapoints.length - 1][1];\n        }\n      }\n      var tsName = this.getTimeSeriesName(tsId);\n      seriesList.push({ target: tsName.name, id: tsName.id, datapoints: datapoints.slice() });\n    }\n    // Ensure consistent TS order\n    seriesList.sort((a, b) => a.id.localeCompare(b.id));\n    var data = {\n      data: seriesList,\n      range: { from: moment(minTime), to: moment(maxTime) },\n    };\n    this.promise.resolve(data);\n    console.debug('Data returned: ' + this.program);\n  }\n\n  getTimeSeriesName(tsId) {\n    var obj = this.handle.get_metadata(tsId);\n    if (!obj) {\n      return tsId;\n    }\n\n    var candidates = ['sf_metric', 'sf_originatingMetric'];\n    var excludedDimensions = ['sf_metric', 'sf_originatingMetric', 'jobId', 'programId', 'computationId'];\n\n    var tsVars = {};\n    var result = [];\n    for (var c in candidates) {\n      var value = obj.properties[candidates[c]];\n      if (value && !value.toLowerCase().startsWith('_sf_')) {\n        tsVars['metric'] = { text: value, value: value };\n        result.push(value);\n      }\n    }\n\n    var key = [];\n    for (var k in obj.properties['sf_key']) {\n      var dimension = obj.properties['sf_key'][k];\n      if (excludedDimensions.indexOf(dimension) === -1) {\n        var value = obj.properties[dimension];\n        if (value) {\n          key.push(dimension + '=' + value);\n          tsVars[dimension] = { text: value, value: value };\n        }\n      }\n    }\n\n    result.push(key.join(','));\n\n    var repr = '';\n    var alias = null;\n    if (obj.properties['sf_streamLabel']) {\n      tsVars['label'] = { text: obj.properties['sf_streamLabel'], value: obj.properties['sf_streamLabel'] };\n      repr += obj.properties['sf_streamLabel'] + ':';\n      alias = this.aliases[obj.properties['sf_streamLabel']];\n    } else {\n      alias = _.find(this.aliases, a => true);\n    }\n    var id = repr + result.join('/');\n    var name = alias ? this.templateSrv.replace(alias, tsVars) : id;\n    return { id, name };\n  }\n}\n"]}